[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "flightgear_python"
version = "2.0.1"
description = "Interface for FlightGear network connections"
authors = ["Julianne Swinoga <julianneswinoga@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8.1"
construct = "^2.10"
multiprocess = "^0.70"
requests = "^2.32"

[tool.poetry.dev-dependencies]
sphinx_mdinclude = "^0.6"
sphinx-rtd-theme = "^2.0"
sh = { version = "^2.0", markers = "sys_platform == 'linux'" }
pytest-cov = "^5.0"
requests-mock = "^1.12"
Flake8-pyproject = "^1.2"
pytest = "^8.3"
pytest-timeout = "^2.3"
GitPython = "^3.1"
pytest-mock = "^3.14"
JSBSim = "^1.2"
# Manually fix JSBSim dependency. Specify numpy version that supports PEP 517 for 3.11
numpy = [
    { version = "^1.26", markers = "python_version >= '3.11'" },
    { version = "^1.24", markers = "python_version < '3.11'" }
]
black = "^24.8"
flake8 = "^7.1"
# Following are pegged at the latest version that supports Python 3.8
sphinx = "==7.1.2"

[tool.poetry.urls]
"Repository" = "https://github.com/julianneswinoga/flightgear-python"
"Documentation" = "https://flightgear-python.readthedocs.io/en/latest"
"Bug Tracker" = "https://github.com/julianneswinoga/flightgear-python/issues"

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.flake8]
max-line-length = 120
ignore = [
    'E731', # Do not assign a lambda expression, use a def
    'W503', # Line break occurred before a binary operator (incompatible with black)
]

[tool.pytest.ini_options]
markers = [
    'fg_integration: to be used with a running FlightGear instance. See scripts/fg_full_integration_test.sh (deselected by default)',
]
addopts = '-m "not fg_integration"'
filterwarnings = [
    'ignore::DeprecationWarning:setuptools:2',
]

[tool.coverage.run]
data_file = '.coverage'
branch = true
timid = true
concurrency = ['multiprocessing']
